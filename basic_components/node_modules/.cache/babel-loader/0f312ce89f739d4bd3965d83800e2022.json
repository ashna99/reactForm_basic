{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\sova_intern\\\\rec_task\\\\basic_components\\\\src\\\\components\\\\forms\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Button from '../button/Button';\nimport Dropdown from '../dropdown/Dropdown';\nimport TextInput from '../textInput/TextInput';\nimport './Form.css';\n\nfunction Form({\n  name\n}) {\n  _s();\n\n  const tests = useRef([{\n    name: 'Tested Biomarker',\n    values: [\"ECG\", \"Glucose\", \"CBC\"]\n  }, {\n    name: 'unit',\n    values: ['mgdl', 'mg', 'cm']\n  }]);\n  const [countRows, setCountRows] = useState(1);\n  const formRef = useRef(null);\n  const refRow = useRef(null);\n  const labResults = useRef(new Map());\n  const keys = useRef(new Set(['ECG', 'Glucose', 'CBC']));\n  const deletedKeys = useRef([]);\n  useEffect(() => {\n    let backButton = formRef.current.children[2].children[0];\n    backButton.disabled = true;\n    backButton.style.opacity = 0.5;\n    let submitButton = formRef.current.children[2].children[1];\n    console.log(submitButton);\n    submitButton.disabled = true;\n    submitButton.style.opacity = 0.5;\n  }, []); //////////////////////////\n\n  const submitHandler = e => {\n    console.log(e.target);\n  }; /////////////////////////////////\n\n\n  const saveHandler = e => {\n    console.log(e.target); // e.target.disabled=true;\n    // e.target.style.opacity=0.5;\n  }; ///////////////////////////////\n\n\n  const eventBubbling = e => {\n    // console.log(formRef.current.children[2].children[0]);\n    console.log(e.target.innerText);\n\n    if (e.target.innerText.toLowerCase() == 'save') {\n      console.log(e.currentTarget.children);\n      refRow.current = e.currentTarget;\n      let rowElements = refRow.current.children;\n      var l = rowElements.length;\n      let selectedTest = rowElements[2].value;\n      let selectedUnit = rowElements[5].value;\n      let defaultValue = 'Select';\n      let selectedValue = rowElements[l - 2].value;\n\n      if (selectedTest != defaultValue && selectedUnit != defaultValue && selectedValue.trim() != '') {\n        let options = rowElements[2].children;\n        Array.from(options).forEach(option => {\n          if (option.value === selectedTest) {\n            option.disabled = true;\n            option.opacity = 0.5;\n          }\n        });\n        deletedKeys.current.push(selectedTest);\n        keys.current.delete(selectedTest);\n        console.log(keys.current);\n        tests.current[0].values = Array.from(keys.current); //  tests.current[0].values.remove(selectedTest);\n\n        labResults.current.set(selectedTest, {\n          'unit': selectedUnit,\n          'value': selectedValue\n        });\n        console.log(labResults);\n        setCountRows(prevCount => prevCount + 1);\n        console.log(countRows);\n        console.log(e.target);\n\n        if (countRows == rowElements[2].children.length - 1) {\n          e.target.disabled = true;\n          e.target.style.opacity = '0.5';\n          let submitButton = formRef.current.children[2].children[1];\n          submitButton.disabled = false;\n          submitButton.style.opacity = 1;\n        }\n\n        if (countRows >= 1) {\n          let backButton = formRef.current.children[2].children[0];\n          backButton.disabled = false;\n          backButton.style.opacity = 1;\n        }\n      } else {\n        alert('invalid entry');\n      }\n\n      rowElements[l - 2].value = '';\n    }\n  }; ///////////////\n\n\n  const backHandler = e => {\n    console.log(e.target);\n    setCountRows();\n    console.log(countRows);\n    keys.current.add(deletedKeys.current.pop());\n    let backButton = formRef.current.children[2].children[0];\n    backButton.disabled = true;\n\n    if (countRows == 0) {\n      backButton.style.opacity = 0.5;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container-fluid `,\n    id: \"lab-report\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid form`,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        onClick: e => eventBubbling(e),\n        children: [tests.current.map(test => /*#__PURE__*/_jsxDEV(Dropdown, {\n          name: test.name,\n          values: test.values,\n          changeHandler: e => null,\n          className: \"col\",\n          defaultValue: \"Select\"\n        }, tests.current.indexOf(test), false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 51\n        }, this)), /*#__PURE__*/_jsxDEV(TextInput, {\n          name: \"result\",\n          changeHandler: e => null,\n          style: {\n            backgroundColor: 'aliceBlue'\n          },\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: \"Save\",\n          clickHandler: saveHandler,\n          variant: \"primary\",\n          color: \"white\",\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          name: \"Back\",\n          clickHandler: backHandler,\n          variant: \"secondary\",\n          color: \"white\",\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: \"Submit\",\n          clickHandler: submitHandler,\n          variant: \"secondary\",\n          color: \"white\",\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"TN3wnz/8sFnIVmyqR3ay6sC0xQg=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/sova_intern/rec_task/basic_components/src/components/forms/Form.js"],"names":["React","useState","useRef","useEffect","Button","Dropdown","TextInput","Form","name","tests","values","countRows","setCountRows","formRef","refRow","labResults","Map","keys","Set","deletedKeys","backButton","current","children","disabled","style","opacity","submitButton","console","log","submitHandler","e","target","saveHandler","eventBubbling","innerText","toLowerCase","currentTarget","rowElements","l","length","selectedTest","value","selectedUnit","defaultValue","selectedValue","trim","options","Array","from","forEach","option","push","delete","set","prevCount","alert","backHandler","add","pop","map","test","indexOf","backgroundColor"],"mappings":"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","sourcesContent":["import React,{useState,useRef,useEffect} from 'react'\r\nimport Button from '../button/Button'\r\nimport Dropdown from '../dropdown/Dropdown'\r\nimport TextInput from '../textInput/TextInput'\r\nimport './Form.css'\r\n\r\nfunction Form({name}) {\r\n   \r\n    const tests=useRef([{\r\n        name:'Tested Biomarker',\r\n        values: [\"ECG\", \"Glucose\", \"CBC\"]\r\n    },{\r\n        name:'unit',\r\n        values:['mgdl','mg','cm']\r\n    }\r\n\r\n])\r\n\r\n\r\nconst [countRows,setCountRows]=useState(1);\r\nconst formRef=useRef(null)\r\nconst refRow=useRef(null);\r\nconst labResults=useRef(new Map());\r\nconst keys=useRef(new Set(['ECG','Glucose','CBC']));\r\nconst deletedKeys=useRef([]);\r\n \r\n useEffect(()=>{\r\n     let backButton = formRef.current.children[2].children[0];\r\n     backButton.disabled = true;\r\n     backButton.style.opacity = 0.5; \r\n     let submitButton = formRef.current.children[2].children[1];\r\n     console.log(submitButton);\r\n     submitButton.disabled = true;\r\n     submitButton.style.opacity = 0.5;\r\n },[])   \r\n\r\n\r\n//////////////////////////\r\nconst submitHandler=(e)=>{\r\n   console.log(e.target);  \r\n}\r\n/////////////////////////////////\r\nconst saveHandler=(e)=>{ \r\nconsole.log(e.target);\r\n// e.target.disabled=true;\r\n// e.target.style.opacity=0.5;\r\n}\r\n///////////////////////////////\r\nconst eventBubbling=(e)=>{\r\n   // console.log(formRef.current.children[2].children[0]);\r\n  console.log(e.target.innerText)\r\n  if(e.target.innerText.toLowerCase()=='save'){\r\n      console.log(e.currentTarget.children);\r\n      refRow.current = e.currentTarget;\r\n      let rowElements = refRow.current.children;\r\n      var l = rowElements.length;\r\n      let selectedTest = rowElements[2].value;\r\n      let selectedUnit=rowElements[5].value;\r\n      let defaultValue='Select';\r\n      let selectedValue=rowElements[l-2].value;\r\n     \r\n      if (selectedTest != defaultValue && selectedUnit != defaultValue && selectedValue.trim() != '') {\r\n      let options = rowElements[2].children;\r\n      Array.from(options).forEach((option) => {\r\n          if (option.value === selectedTest) {\r\n              option.disabled = true;\r\n              option.opacity = 0.5;\r\n          }\r\n      })\r\n\r\n         deletedKeys.current.push(selectedTest);\r\n         keys.current.delete(selectedTest);\r\n         console.log(keys.current);\r\n         tests.current[0].values=Array.from(keys.current);\r\n     //  tests.current[0].values.remove(selectedTest);\r\n          labResults.current.set(selectedTest, { 'unit': selectedUnit, 'value': selectedValue });\r\n          console.log(labResults);\r\n          setCountRows((prevCount) => prevCount + 1);\r\n          console.log(countRows);\r\n          console.log(e.target)\r\n          if(countRows==rowElements[2].children.length-1){\r\n              e.target.disabled=true;\r\n              e.target.style.opacity='0.5';\r\n              let submitButton=formRef.current.children[2].children[1];\r\n              submitButton.disabled=false;\r\n              submitButton.style.opacity=1;\r\n          }\r\n          if(countRows>=1){\r\n              let backButton=formRef.current.children[2].children[0];\r\n              backButton.disabled=false;\r\n              backButton.style.opacity=1;\r\n          }\r\n      }\r\n      else{\r\n          alert('invalid entry');\r\n      }\r\n      rowElements[l - 2].value = '';\r\n     \r\n\r\n  }   \r\n}\r\n\r\n///////////////\r\nconst backHandler=(e)=>{\r\n    console.log(e.target);\r\n    setCountRows();\r\n    console.log(countRows);\r\n        keys.current.add(deletedKeys.current.pop());\r\n        let backButton = formRef.current.children[2].children[0];\r\n        backButton.disabled = true;\r\n    if (countRows == 0) {\r\n        backButton.style.opacity = 0.5; \r\n    }\r\n}\r\n    return (\r\n        <div className={`container-fluid `} id=\"lab-report\" >  \r\n           \r\n            <div className={`grid form`} ref={formRef}>\r\n            <div className='row'>\r\n                    <h3 >{name}</h3>\r\n            </div>\r\n       \r\n                <div className='row'  onClick={(e) => eventBubbling(e)} >\r\n                    {tests.current.map((test) => (<Dropdown key={tests.current.indexOf(test)} name={test.name} values={test.values} changeHandler={(e) => null} className='col' defaultValue='Select'/>))}\r\n                    <TextInput name=\"result\" changeHandler={(e) => null} style={{ backgroundColor: 'aliceBlue' }} className='col' />\r\n                    <Button name='Save' clickHandler={saveHandler}  variant='primary' color='white' className='col' ></Button>\r\n\r\n                    </div>\r\n               \r\n                <div className='row flex-end'>\r\n                    <Button name='Back' clickHandler={backHandler} variant='secondary' color='white'\r\n                        className='col'  ></Button>  \r\n                    <Button name='Submit' clickHandler={submitHandler} variant='secondary' color='white'\r\n                    className='col'  ></Button>   \r\n                                \r\n                </div>\r\n               \r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}