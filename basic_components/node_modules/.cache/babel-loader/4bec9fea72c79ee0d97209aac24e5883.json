{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\sova_intern\\\\rec_task\\\\basic_components\\\\src\\\\components\\\\forms\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Button from '../button/Button';\nimport Dropdown from '../dropdown/Dropdown';\nimport TextInput from '../textInput/TextInput';\nimport './Form.css';\n\nfunction Form({\n  name\n}) {\n  _s();\n\n  const tests = [{\n    name: 'Tested Biomarker',\n    values: ['ECG', 'Glucose', 'CBC']\n  }, {\n    name: 'unit',\n    values: ['mgdl', 'mg', 'cm']\n  }];\n  const keys = ['ECG', 'Glucose', 'CBC'];\n  const formRef = useRef();\n  const [lastRow, setLastRow] = useState(1);\n  const refRow = useRef(null);\n  const [resVal, setResVal] = useState('');\n  const [labResults, setLabResults] = useState([]);\n\n  const selectHandler = e => {\n    console.log(e.target);\n  };\n\n  const addRowHandler = e => {\n    console.log(e.currentTarget);\n  };\n\n  const saveHandler = e => {\n    let l = refRow.current.children.length;\n    console.log(refRow.current.children[l - 1]);\n    let editButton = refRow.current.children[l - 1];\n    console.log(e.target.disabled);\n  };\n\n  const eventBubbling = e => {\n    console.log(e.currentTarget);\n    refRow.current = e.currentTarget;\n    console.log(refRow.current);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container-fluid `,\n    id: \"lab-report\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid form`,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), keys.map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        onClick: e => eventBubbling(e),\n        children: [tests.map(test => /*#__PURE__*/_jsxDEV(Dropdown, {\n          name: test.name,\n          values: test.values,\n          changeHandler: selectHandler,\n          className: \"col\"\n        }, tests.indexOf(test), false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 43\n        }, this)), /*#__PURE__*/_jsxDEV(TextInput, {\n          name: \"result\",\n          changeHandler: e => setResVal(e.target.value),\n          style: {\n            backgroundColor: 'aliceBlue'\n          },\n          value: resVal,\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: \"Save\",\n          clickHandler: saveHandler,\n          variant: \"primary\",\n          color: \"white\",\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 18\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row flex-end\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          name: \"Add Row\",\n          clickHandler: addRowHandler,\n          variant: \"secondary\",\n          color: \"white\",\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"iDm07DL+8hlZyhLLDj4tT82cNb8=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/sova_intern/rec_task/basic_components/src/components/forms/Form.js"],"names":["React","useState","useRef","Button","Dropdown","TextInput","Form","name","tests","values","keys","formRef","lastRow","setLastRow","refRow","resVal","setResVal","labResults","setLabResults","selectHandler","e","console","log","target","addRowHandler","currentTarget","saveHandler","l","current","children","length","editButton","disabled","eventBubbling","map","key","test","indexOf","value","backgroundColor"],"mappings":"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","sourcesContent":["import React,{useState,useRef} from 'react'\r\nimport Button from '../button/Button'\r\nimport Dropdown from '../dropdown/Dropdown'\r\nimport TextInput from '../textInput/TextInput'\r\nimport './Form.css'\r\n\r\nfunction Form({name}) {\r\n   \r\n    const tests=[{\r\n        name:'Tested Biomarker',\r\n        values: ['ECG', 'Glucose', 'CBC']\r\n    },{\r\n        name:'unit',\r\n        values:['mgdl','mg','cm']\r\n    }\r\n\r\n]\r\nconst keys=['ECG','Glucose','CBC']\r\nconst formRef=useRef();\r\nconst [lastRow,setLastRow]=useState(1)\r\nconst refRow=useRef(null);\r\nconst [resVal,setResVal]=useState('')\r\nconst[labResults,setLabResults]=useState([]);\r\n\r\n\r\nconst selectHandler=(e)=>{\r\n   console.log(e.target);\r\n}\r\nconst addRowHandler=(e)=>{\r\n   console.log(e.currentTarget);  \r\n}\r\nconst saveHandler=(e)=>{\r\n    let l=refRow.current.children.length;\r\n   console.log(refRow.current.children[l-1]);\r\n    let editButton = refRow.current.children[l - 1];\r\n    \r\nconsole.log(e.target.disabled);\r\n}\r\nconst eventBubbling=(e)=>{\r\n  console.log(e.currentTarget);\r\n  refRow.current=e.currentTarget;\r\n  console.log(refRow.current)\r\n}\r\n\r\n    return (\r\n        <div className={`container-fluid `} id=\"lab-report\" >  \r\n           \r\n            <div className={`grid form`} ref={formRef}>\r\n            <div className='row'>\r\n                    <h3 >{name}</h3>\r\n            </div>\r\n            \r\n            {keys.map((key)=>\r\n               ( <div className='row' key={key} onClick={(e)=>eventBubbling(e)}>\r\n                   { tests.map((test) => (<Dropdown key={tests.indexOf(test)} name={test.name} values={test.values} changeHandler={selectHandler} className='col' />))}\r\n                    <TextInput name=\"result\" changeHandler={(e) => setResVal(e.target.value)} style={{ backgroundColor: 'aliceBlue' }} value={resVal} className='col' />\r\n                    <Button name='Save' clickHandler={saveHandler}  variant='primary' color='white'\r\n                        className='col' ></Button>\r\n                </div>\r\n               )\r\n            )}\r\n               \r\n                <div className='row flex-end'>\r\n                    <Button name='Add Row' clickHandler={addRowHandler} variant='secondary' color='white'\r\n                    className='col'></Button>\r\n                  \r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}