{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\sova_intern\\\\rec_task\\\\basic_components\\\\src\\\\components\\\\forms\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Button from '../button/Button';\nimport Dropdown from '../dropdown/Dropdown';\nimport TextInput from '../textInput/TextInput';\nimport './Form.css';\n\nfunction Form({\n  name\n}) {\n  _s();\n\n  const tests = [{\n    name: 'Tested Biomarker',\n    values: ['ECG', 'Glucose', 'CBC']\n  }, {\n    name: 'unit',\n    values: ['mgdl', 'mg', 'cm']\n  }];\n  const [countRows, setCountRows] = useState(1);\n  const formRef = useRef(null);\n  const refRow = useRef(null);\n  const labResults = useRef(new Map());\n  const keys = useRef(new Set());\n  tests[0].values.forEach(val => {\n    keys.current.add(val);\n  });\n  const currKey = useRef();\n  console.log(keys); //////////////////////////\n\n  const submitHandler = e => {\n    console.log(e.target);\n  }; /////////////////////////////////\n\n\n  const saveHandler = e => {\n    console.log(e.target); // e.target.disabled=true;\n    // e.target.style.opacity=0.5;\n  }; ///////////////////////////////\n\n\n  const eventBubbling = e => {\n    // console.log(formRef.current.children[2].children[0]);\n    console.log(e.target.type);\n\n    if (e.target.type === 'submit') {\n      console.log(e.currentTarget.children);\n      refRow.current = e.currentTarget;\n      let rowElements = refRow.current.children;\n      var l = rowElements.length;\n      let selectedTest = rowElements[2].value;\n      let selectedUnit = rowElements[5].value;\n      let defaultValue = 'Select';\n      let selectedValue = rowElements[l - 2].value;\n\n      if (selectedTest != defaultValue && selectedUnit != defaultValue && selectedValue.trim() != '') {\n        let options = rowElements[2].children;\n        Array.from(options).forEach(option => {\n          if (option.value === selectedTest) {\n            option.disabled = true;\n            option.opacity = 0.5;\n          }\n        });\n        currKey.current = selectedTest;\n        keys.current.remove(selectedTest);\n        labResults.current.set(selectedTest, {\n          'unit': selectedUnit,\n          'value': selectedValue\n        });\n        console.log(labResults);\n        setCountRows(prevCount => prevCount + 1);\n        console.log(countRows);\n        console.log(e.target);\n\n        if (countRows == rowElements[2].children.length - 1) {\n          e.target.disabled = true;\n          e.target.style.opacity = '0.5';\n          let submitButton = formRef.current.children[2].children[0];\n          submitButton.disabled = false;\n          submitButton.style.opacity = 1;\n        }\n      } else {\n        alert('invalid entry');\n      }\n\n      rowElements[l - 2].value = ''; //    if(countRows===l){\n      //          refRow.current.children[l-1].disabled=true;\n      //          refRow.current.children[l-1].opacity=0.5;\n      //    }\n    }\n  }; //////////////////////\n\n\n  const editHandler = e => {\n    console.log(e.target);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container-fluid `,\n    id: \"lab-report\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid form`,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        onClick: e => eventBubbling(e),\n        children: [tests.map(test => /*#__PURE__*/_jsxDEV(Dropdown, {\n          name: test.name,\n          values: Array.from(keys.current),\n          changeHandler: e => null,\n          className: \"col\",\n          defaultValue: \"Select\"\n        }, tests.indexOf(test), false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 43\n        }, this)), /*#__PURE__*/_jsxDEV(TextInput, {\n          name: \"result\",\n          changeHandler: e => null,\n          style: {\n            backgroundColor: 'aliceBlue'\n          },\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: \"Save\",\n          clickHandler: saveHandler,\n          disabled: false,\n          variant: \"primary\",\n          color: \"white\",\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row flex-end\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          name: \"Submit\",\n          clickHandler: submitHandler,\n          variant: \"secondary\",\n          color: \"white\",\n          className: \"col\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"vikCQHezWiJPnlGLabXJQYvRprM=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/sova_intern/rec_task/basic_components/src/components/forms/Form.js"],"names":["React","useState","useRef","Button","Dropdown","TextInput","Form","name","tests","values","countRows","setCountRows","formRef","refRow","labResults","Map","keys","Set","forEach","val","current","add","currKey","console","log","submitHandler","e","target","saveHandler","eventBubbling","type","currentTarget","children","rowElements","l","length","selectedTest","value","selectedUnit","defaultValue","selectedValue","trim","options","Array","from","option","disabled","opacity","remove","set","prevCount","style","submitButton","alert","editHandler","map","test","indexOf","backgroundColor"],"mappings":"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","sourcesContent":["import React,{useState,useRef} from 'react'\r\nimport Button from '../button/Button'\r\nimport Dropdown from '../dropdown/Dropdown'\r\nimport TextInput from '../textInput/TextInput'\r\nimport './Form.css'\r\n\r\nfunction Form({name}) {\r\n   \r\n    const tests=[{\r\n        name:'Tested Biomarker',\r\n        values: ['ECG', 'Glucose', 'CBC']\r\n    },{\r\n        name:'unit',\r\n        values:['mgdl','mg','cm']\r\n    }\r\n\r\n]\r\n\r\n\r\nconst [countRows,setCountRows]=useState(1);\r\nconst formRef=useRef(null)\r\nconst refRow=useRef(null);\r\nconst labResults=useRef(new Map());\r\nconst keys=useRef(new Set())\r\ntests[0].values.forEach((val)=>{\r\n    keys.current.add(val);\r\n})\r\nconst currKey=useRef()\r\nconsole.log(keys);\r\n//////////////////////////\r\nconst submitHandler=(e)=>{\r\n   console.log(e.target);  \r\n}\r\n/////////////////////////////////\r\nconst saveHandler=(e)=>{ \r\nconsole.log(e.target);\r\n// e.target.disabled=true;\r\n// e.target.style.opacity=0.5;\r\n}\r\n///////////////////////////////\r\nconst eventBubbling=(e)=>{\r\n   // console.log(formRef.current.children[2].children[0]);\r\n  console.log(e.target.type)\r\n  if(e.target.type==='submit'){\r\n      console.log(e.currentTarget.children);\r\n      refRow.current = e.currentTarget;\r\n      let rowElements = refRow.current.children;\r\n      var l = rowElements.length;\r\n      let selectedTest = rowElements[2].value;\r\n      let selectedUnit=rowElements[5].value;\r\n      let defaultValue='Select';\r\n      let selectedValue=rowElements[l-2].value;\r\n     \r\n      if (selectedTest != defaultValue && selectedUnit != defaultValue && selectedValue.trim() != '') {\r\n      let options = rowElements[2].children;\r\n      Array.from(options).forEach((option) => {\r\n          if (option.value === selectedTest) {\r\n              option.disabled = true;\r\n              option.opacity = 0.5;\r\n          }\r\n      })\r\n         currKey.current=selectedTest;\r\n         keys.current.remove(selectedTest);\r\n          labResults.current.set(selectedTest, { 'unit': selectedUnit, 'value': selectedValue });\r\n          console.log(labResults);\r\n          setCountRows((prevCount) => prevCount + 1);\r\n          console.log(countRows);\r\n          console.log(e.target)\r\n          if(countRows==rowElements[2].children.length-1){\r\n              e.target.disabled=true;\r\n              e.target.style.opacity='0.5';\r\n              let submitButton=formRef.current.children[2].children[0];\r\n              submitButton.disabled=false;\r\n              submitButton.style.opacity=1;\r\n          }\r\n      }\r\n      else{\r\n          alert('invalid entry');\r\n      }\r\n      rowElements[l - 2].value = '';\r\n        //    if(countRows===l){\r\n        //          refRow.current.children[l-1].disabled=true;\r\n        //          refRow.current.children[l-1].opacity=0.5;\r\n        //    }\r\n\r\n  }   \r\n}\r\n//////////////////////\r\nconst editHandler=(e)=>{\r\n    console.log(e.target);\r\n}\r\n\r\n    return (\r\n        <div className={`container-fluid `} id=\"lab-report\" >  \r\n           \r\n            <div className={`grid form`} ref={formRef}>\r\n            <div className='row'>\r\n                    <h3 >{name}</h3>\r\n            </div>\r\n       \r\n                <div className='row'  onClick={(e) => eventBubbling(e)} >\r\n                    {tests.map((test) => (<Dropdown key={tests.indexOf(test)} name={test.name} values={Array.from(keys.current)} changeHandler={(e) => null} className='col' defaultValue='Select'/>))}\r\n                    <TextInput name=\"result\" changeHandler={(e) => null} style={{ backgroundColor: 'aliceBlue' }} className='col' />\r\n                    <Button name='Save' clickHandler={saveHandler} disabled={false} variant='primary' color='white' className='col' ></Button>\r\n                    </div>\r\n               \r\n                <div className='row flex-end'>\r\n                    <Button name='Submit' clickHandler={submitHandler} variant='secondary' color='white'\r\n                    className='col' disabled={true} ></Button>\r\n                  \r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}