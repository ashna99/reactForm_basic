{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\sova_intern\\\\rec_task\\\\basic_components\\\\src\\\\components\\\\forms\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Button from '../button/Button';\nimport Dropdown from '../dropdown/Dropdown';\nimport TextInput from '../textInput/TextInput';\nimport './Form.css';\n\nfunction Form({\n  name\n}) {\n  _s();\n\n  const tests = useRef([{\n    name: 'Tested Biomarker',\n    values: [\"ECG\", \"Glucose\", \"CBC\"]\n  }, {\n    name: 'unit',\n    values: ['mgdl', 'mg', 'cm']\n  }]);\n  const [countRows, setCountRows] = useState(1);\n  const formRef = useRef(null);\n  const refRow = useRef(null);\n  const labResults = useRef(new Map());\n  const keys = useRef(new Set(['ECG', 'Glucose', 'CBC']));\n  const deletedKeys = useRef([]); //////////////////////////\n\n  const submitHandler = e => {\n    console.log(e.target);\n  }; /////////////////////////////////\n\n\n  const saveHandler = e => {\n    console.log(e.target); // e.target.disabled=true;\n    // e.target.style.opacity=0.5;\n  }; ///////////////////////////////\n\n\n  const eventBubbling = e => {\n    // console.log(formRef.current.children[2].children[0]);\n    console.log(e.target.type);\n\n    if (e.target.type === 'submit') {\n      console.log(e.currentTarget.children);\n      refRow.current = e.currentTarget;\n      let rowElements = refRow.current.children;\n      var l = rowElements.length;\n      let selectedTest = rowElements[2].value;\n      let selectedUnit = rowElements[5].value;\n      let defaultValue = 'Select';\n      let selectedValue = rowElements[l - 2].value;\n\n      if (selectedTest != defaultValue && selectedUnit != defaultValue && selectedValue.trim() != '') {\n        let options = rowElements[2].children;\n        Array.from(options).forEach(option => {\n          if (option.value === selectedTest) {\n            option.disabled = true;\n            option.opacity = 0.5;\n          }\n        });\n        deletedKeys.current.push(selectedTest);\n        keys.current.delete(selectedTest);\n        console.log(keys.current);\n        tests.current[0].values = Array.from(keys.current); //  tests.current[0].values.remove(selectedTest);\n\n        labResults.current.set(selectedTest, {\n          'unit': selectedUnit,\n          'value': selectedValue\n        });\n        console.log(labResults);\n        setCountRows(prevCount => prevCount + 1);\n        console.log(countRows);\n        console.log(e.target);\n\n        if (countRows == rowElements[2].children.length - 1) {\n          e.target.disabled = true;\n          e.target.style.opacity = '0.5';\n          let submitButton = formRef.current.children[2].children[0];\n          submitButton.disabled = false;\n          submitButton.style.opacity = 1;\n        }\n\n        if (countRows >= 1) {\n          let backButton;\n        }\n      } else {\n        alert('invalid entry');\n      }\n\n      rowElements[l - 2].value = '';\n    }\n  }; //////////////////////\n\n\n  const editHandler = e => {\n    console.log(e.target);\n  }; ///////////////\n\n\n  const backHandler = e => {\n    console.log(e.target);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container-fluid `,\n    id: \"lab-report\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid form`,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        onClick: e => eventBubbling(e),\n        children: [tests.current.map(test => /*#__PURE__*/_jsxDEV(Dropdown, {\n          name: test.name,\n          values: test.values,\n          changeHandler: e => null,\n          className: \"col\",\n          defaultValue: \"Select\"\n        }, tests.current.indexOf(test), false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 51\n        }, this)), /*#__PURE__*/_jsxDEV(TextInput, {\n          name: \"result\",\n          changeHandler: e => null,\n          style: {\n            backgroundColor: 'aliceBlue'\n          },\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: \"Save\",\n          clickHandler: saveHandler,\n          disabled: false,\n          variant: \"primary\",\n          color: \"white\",\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          name: \"Back\",\n          clickHandler: backHandler,\n          variant: \"secondary\",\n          color: \"white\",\n          className: \"col\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: \"Submit\",\n          clickHandler: submitHandler,\n          variant: \"secondary\",\n          color: \"white\",\n          className: \"col\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"2o6Pom58dlmt7YeGnW49zKEeFMs=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/sova_intern/rec_task/basic_components/src/components/forms/Form.js"],"names":["React","useState","useRef","Button","Dropdown","TextInput","Form","name","tests","values","countRows","setCountRows","formRef","refRow","labResults","Map","keys","Set","deletedKeys","submitHandler","e","console","log","target","saveHandler","eventBubbling","type","currentTarget","children","current","rowElements","l","length","selectedTest","value","selectedUnit","defaultValue","selectedValue","trim","options","Array","from","forEach","option","disabled","opacity","push","delete","set","prevCount","style","submitButton","backButton","alert","editHandler","backHandler","map","test","indexOf","backgroundColor"],"mappings":"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","sourcesContent":["import React,{useState,useRef} from 'react'\r\nimport Button from '../button/Button'\r\nimport Dropdown from '../dropdown/Dropdown'\r\nimport TextInput from '../textInput/TextInput'\r\nimport './Form.css'\r\n\r\nfunction Form({name}) {\r\n   \r\n    const tests=useRef([{\r\n        name:'Tested Biomarker',\r\n        values: [\"ECG\", \"Glucose\", \"CBC\"]\r\n    },{\r\n        name:'unit',\r\n        values:['mgdl','mg','cm']\r\n    }\r\n\r\n])\r\n\r\n\r\nconst [countRows,setCountRows]=useState(1);\r\nconst formRef=useRef(null)\r\nconst refRow=useRef(null);\r\nconst labResults=useRef(new Map());\r\nconst keys=useRef(new Set(['ECG','Glucose','CBC']));\r\nconst deletedKeys=useRef([])\r\n;\r\n//////////////////////////\r\nconst submitHandler=(e)=>{\r\n   console.log(e.target);  \r\n}\r\n/////////////////////////////////\r\nconst saveHandler=(e)=>{ \r\nconsole.log(e.target);\r\n// e.target.disabled=true;\r\n// e.target.style.opacity=0.5;\r\n}\r\n///////////////////////////////\r\nconst eventBubbling=(e)=>{\r\n   // console.log(formRef.current.children[2].children[0]);\r\n  console.log(e.target.type)\r\n  if(e.target.type==='submit'){\r\n      console.log(e.currentTarget.children);\r\n      refRow.current = e.currentTarget;\r\n      let rowElements = refRow.current.children;\r\n      var l = rowElements.length;\r\n      let selectedTest = rowElements[2].value;\r\n      let selectedUnit=rowElements[5].value;\r\n      let defaultValue='Select';\r\n      let selectedValue=rowElements[l-2].value;\r\n     \r\n      if (selectedTest != defaultValue && selectedUnit != defaultValue && selectedValue.trim() != '') {\r\n      let options = rowElements[2].children;\r\n      Array.from(options).forEach((option) => {\r\n          if (option.value === selectedTest) {\r\n              option.disabled = true;\r\n              option.opacity = 0.5;\r\n          }\r\n      })\r\n\r\n         deletedKeys.current.push(selectedTest);\r\n         keys.current.delete(selectedTest);\r\n         console.log(keys.current);\r\n         tests.current[0].values=Array.from(keys.current);\r\n     //  tests.current[0].values.remove(selectedTest);\r\n          labResults.current.set(selectedTest, { 'unit': selectedUnit, 'value': selectedValue });\r\n          console.log(labResults);\r\n          setCountRows((prevCount) => prevCount + 1);\r\n          console.log(countRows);\r\n          console.log(e.target)\r\n          if(countRows==rowElements[2].children.length-1){\r\n              e.target.disabled=true;\r\n              e.target.style.opacity='0.5';\r\n              let submitButton=formRef.current.children[2].children[0];\r\n              submitButton.disabled=false;\r\n              submitButton.style.opacity=1;\r\n          }\r\n          if(countRows>=1){\r\n              let backButton\r\n          }\r\n      }\r\n      else{\r\n          alert('invalid entry');\r\n      }\r\n      rowElements[l - 2].value = '';\r\n     \r\n\r\n  }   \r\n}\r\n//////////////////////\r\nconst editHandler=(e)=>{\r\n    console.log(e.target);\r\n}\r\n///////////////\r\nconst backHandler=(e)=>{\r\n    console.log(e.target);\r\n}\r\n    return (\r\n        <div className={`container-fluid `} id=\"lab-report\" >  \r\n           \r\n            <div className={`grid form`} ref={formRef}>\r\n            <div className='row'>\r\n                    <h3 >{name}</h3>\r\n            </div>\r\n       \r\n                <div className='row'  onClick={(e) => eventBubbling(e)} >\r\n                    {tests.current.map((test) => (<Dropdown key={tests.current.indexOf(test)} name={test.name} values={test.values} changeHandler={(e) => null} className='col' defaultValue='Select'/>))}\r\n                    <TextInput name=\"result\" changeHandler={(e) => null} style={{ backgroundColor: 'aliceBlue' }} className='col' />\r\n                    <Button name='Save' clickHandler={saveHandler} disabled={false} variant='primary' color='white' className='col' ></Button>\r\n\r\n                    </div>\r\n               \r\n                <div className='row flex-end'>\r\n                    <Button name='Back' clickHandler={backHandler} variant='secondary' color='white'\r\n                        className='col' disabled={true} ></Button>  \r\n                    <Button name='Submit' clickHandler={submitHandler} variant='secondary' color='white'\r\n                    className='col' disabled={true} ></Button>   \r\n                                \r\n                </div>\r\n               \r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}