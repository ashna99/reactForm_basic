{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\sova_intern\\\\rec_task\\\\basic_components\\\\src\\\\components\\\\forms\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Button from '../button/Button';\nimport Dropdown from '../dropdown/Dropdown';\nimport TextInput from '../textInput/TextInput';\nimport './Form.css';\n\nfunction Form({\n  name\n}) {\n  _s();\n\n  const tests = [{\n    name: 'Tested Biomarker',\n    values: ['ECG', 'Glucose', 'CBC']\n  }, {\n    name: 'unit',\n    values: ['mgdl', 'mg', 'cm']\n  }];\n  const [countRows, setCountRows] = useState(1);\n  const formRef = useRef();\n  const refRow = useRef(null);\n  const labResults = useRef(new Map()); //////////////////////////\n\n  const submitHandler = e => {\n    console.log(e.currentTarget);\n  }; /////////////////////////////////\n\n\n  const saveHandler = e => {\n    console.log(e.target); // e.target.disabled=true;\n    // e.target.style.opacity=0.5;\n  }; ///////////////////////////////\n\n\n  const eventBubbling = e => {\n    console.log(e.target.type);\n\n    if (e.target.type === 'submit') {\n      console.log(e.currentTarget.children);\n      refRow.current = e.currentTarget;\n      let l = refRow.current.children.length;\n      let selectedTest = refRow.current.children[2].value;\n      let selectedUnit = refRow.current.children[5].value;\n      let selectedValue = refRow.current.children[l - 2].value;\n      let options = refRow.current.children[2].children;\n      Array.from(options).forEach(option => {\n        if (option.value === selectedTest) {\n          option.disabled = true;\n          option.opacity = 0.5;\n        }\n      });\n      refRow.current.children[l - 2].value = '';\n      labResults.current.set(selectedTest, {\n        'unit': selectedUnit,\n        'value': selectedValue\n      });\n      console.log(labResults);\n      setCountRows(prevCount => prevCount + 1);\n\n      if (countRows === l) {\n        refRow.current.children[l - 1].disabled = true;\n      }\n    }\n  }; //////////////////////\n\n\n  const editHandler = e => {\n    console.log(e.target);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container-fluid `,\n    id: \"lab-report\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid form`,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        onClick: e => eventBubbling(e),\n        children: [tests.map(test => /*#__PURE__*/_jsxDEV(Dropdown, {\n          name: test.name,\n          values: test.values,\n          changeHandler: e => null,\n          className: \"col\"\n        }, tests.indexOf(test), false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 43\n        }, this)), /*#__PURE__*/_jsxDEV(TextInput, {\n          name: \"result\",\n          changeHandler: e => null,\n          style: {\n            backgroundColor: 'aliceBlue'\n          },\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: \"Save\",\n          clickHandler: saveHandler,\n          disabled: false,\n          variant: \"primary\",\n          color: \"white\",\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row flex-end\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          name: \"Submit\",\n          clickHandler: submitHandler,\n          variant: \"secondary\",\n          color: \"white\",\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"9nits/5zqOPzj8Cys+m4ROK7qhI=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/sova_intern/rec_task/basic_components/src/components/forms/Form.js"],"names":["React","useState","useRef","Button","Dropdown","TextInput","Form","name","tests","values","countRows","setCountRows","formRef","refRow","labResults","Map","submitHandler","e","console","log","currentTarget","saveHandler","target","eventBubbling","type","children","current","l","length","selectedTest","value","selectedUnit","selectedValue","options","Array","from","forEach","option","disabled","opacity","set","prevCount","editHandler","map","test","indexOf","backgroundColor"],"mappings":"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","sourcesContent":["import React,{useState,useRef} from 'react'\r\nimport Button from '../button/Button'\r\nimport Dropdown from '../dropdown/Dropdown'\r\nimport TextInput from '../textInput/TextInput'\r\nimport './Form.css'\r\n\r\nfunction Form({name}) {\r\n   \r\n    const tests=[{\r\n        name:'Tested Biomarker',\r\n        values: ['ECG', 'Glucose', 'CBC']\r\n    },{\r\n        name:'unit',\r\n        values:['mgdl','mg','cm']\r\n    }\r\n\r\n]\r\nconst [countRows,setCountRows]=useState(1);\r\nconst formRef=useRef();\r\nconst refRow=useRef(null);\r\nconst labResults=useRef(new Map());\r\n\r\n\r\n\r\n//////////////////////////\r\nconst submitHandler=(e)=>{\r\n   console.log(e.currentTarget);  \r\n}\r\n/////////////////////////////////\r\nconst saveHandler=(e)=>{ \r\nconsole.log(e.target);\r\n// e.target.disabled=true;\r\n// e.target.style.opacity=0.5;\r\n}\r\n///////////////////////////////\r\nconst eventBubbling=(e)=>{\r\n \r\n  console.log(e.target.type)\r\n  if(e.target.type==='submit'){\r\n      console.log(e.currentTarget.children);\r\n      refRow.current = e.currentTarget;\r\n      let l = refRow.current.children.length;\r\n      let selectedTest = refRow.current.children[2].value;\r\n      let selectedUnit=refRow.current.children[5].value;\r\n      let selectedValue=refRow.current.children[l-2].value;\r\n      let options = refRow.current.children[2].children;\r\n      Array.from(options).forEach((option) => {\r\n          if (option.value === selectedTest) {\r\n              option.disabled = true;\r\n              option.opacity = 0.5;\r\n          }\r\n      })\r\n      refRow.current.children[l - 2].value='';\r\n           labResults.current.set(selectedTest,{'unit':selectedUnit,'value':selectedValue});\r\n           console.log(labResults);\r\n           setCountRows((prevCount)=>prevCount+1);\r\n           if(countRows===l){\r\n                 refRow.current.children[l-1].disabled=true;\r\n                 \r\n           }\r\n\r\n  }   \r\n}\r\n//////////////////////\r\nconst editHandler=(e)=>{\r\n    console.log(e.target);\r\n}\r\n\r\n    return (\r\n        <div className={`container-fluid `} id=\"lab-report\" >  \r\n           \r\n            <div className={`grid form`} ref={formRef}>\r\n            <div className='row'>\r\n                    <h3 >{name}</h3>\r\n            </div>\r\n       \r\n                <div className='row'  onClick={(e) => eventBubbling(e)} >\r\n                    {tests.map((test) => (<Dropdown key={tests.indexOf(test)} name={test.name} values={test.values} changeHandler={(e) => null} className='col' />))}\r\n                    <TextInput name=\"result\" changeHandler={(e) => null} style={{ backgroundColor: 'aliceBlue' }} className='col' />\r\n                    <Button name='Save' clickHandler={saveHandler} disabled={false} variant='primary' color='white' className='col' ></Button>\r\n                    </div>\r\n               \r\n                <div className='row flex-end'>\r\n                    <Button name='Submit' clickHandler={submitHandler} variant='secondary' color='white'\r\n                    className='col'></Button>\r\n                  \r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}