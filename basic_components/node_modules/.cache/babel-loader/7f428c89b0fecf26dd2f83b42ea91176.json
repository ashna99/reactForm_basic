{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\sova_intern\\\\rec_task\\\\basic_components\\\\src\\\\components\\\\forms\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Button from '../button/Button';\nimport Dropdown from '../dropdown/Dropdown';\nimport TextInput from '../textInput/TextInput';\nimport './Form.css';\n\nfunction Form({\n  name\n}) {\n  _s();\n\n  const tests = [{\n    name: 'Tested Biomarker',\n    values: ['ECG', 'Glucose', 'CBC']\n  }, {\n    name: 'unit',\n    values: ['mgdl', 'mg', 'cm']\n  }];\n  const keys = ['ECG', 'Glucose', 'CBC'];\n  const formRef = useRef();\n  const refRow = useRef(null);\n  const refRows = useRef(new Map()); // keys.forEach((key)=>{\n  //     refRows.current.set(key,useRef(null));\n  // })\n\n  const [labResults, setLabResults] = useState([]); //////////////////////////\n\n  const addRowHandler = e => {\n    console.log(e.currentTarget);\n  }; /////////////////////////////////\n\n\n  const saveHandler = e => {\n    console.log(e.target.disabled);\n    e.target.disabled = true;\n    e.target.style.opacity = 0.5;\n  }; ///////////////////////////////\n\n\n  const eventBubbling = e => {\n    console.log(e.currentTarget);\n    console.log(e.target.type);\n\n    if (e.target.type === 'submit') {\n      refRow.current = e.currentTarget; //console.log(refRow.current);\n\n      let l = refRow.current.children.length;\n      console.log(refRow.current.children[2].children);\n      let editButton = refRow.current.children[l - 1];\n      editButton.disabled = false;\n      editButton.style.opacity = 1;\n      let selectedVal = refRow.current.children[2].value;\n      let options = refRow.current.children[2].children;\n      Array.from(options).forEach(option => {\n        if (option.value === selectedVal) {\n          option.disabled = true;\n          option.opacity = 0.5;\n        }\n      }); // console.log(tests.current)\n\n      refRows.current.set(selectedVal, refRow.current);\n      console.log(refRows.current);\n    }\n  }; //////////////////////\n\n\n  const editHandler = e => {\n    console.log(e.target);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container-fluid `,\n    id: \"lab-report\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid form`,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        onClick: e => eventBubbling(e),\n        children: [tests.map(test => /*#__PURE__*/_jsxDEV(Dropdown, {\n          name: test.name,\n          values: test.values,\n          changeHandler: e => null,\n          className: \"col\"\n        }, tests.indexOf(test), false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 43\n        }, this)), /*#__PURE__*/_jsxDEV(TextInput, {\n          name: \"result\",\n          changeHandler: e => null,\n          style: {\n            backgroundColor: 'aliceBlue'\n          },\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: \"Save\",\n          clickHandler: saveHandler,\n          disabled: false,\n          variant: \"primary\",\n          color: \"white\",\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, keys.indexOf(key), true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row flex-end\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          name: \"Add Row\",\n          clickHandler: addRowHandler,\n          variant: \"secondary\",\n          color: \"white\",\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"+6u/oiQMJ6rEqXKifExobR/06EI=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/sova_intern/rec_task/basic_components/src/components/forms/Form.js"],"names":["React","useState","useRef","Button","Dropdown","TextInput","Form","name","tests","values","keys","formRef","refRow","refRows","Map","labResults","setLabResults","addRowHandler","e","console","log","currentTarget","saveHandler","target","disabled","style","opacity","eventBubbling","type","current","l","children","length","editButton","selectedVal","value","options","Array","from","forEach","option","set","editHandler","map","test","indexOf","backgroundColor","key"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,MAAvB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,YAAP;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAsB;AAAA;;AAElB,QAAMC,KAAK,GAAC,CAAC;AACTD,IAAAA,IAAI,EAAC,kBADI;AAETE,IAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,SAAR,EAAmB,KAAnB;AAFC,GAAD,EAGV;AACEF,IAAAA,IAAI,EAAC,MADP;AAEEE,IAAAA,MAAM,EAAC,CAAC,MAAD,EAAQ,IAAR,EAAa,IAAb;AAFT,GAHU,CAAZ;AASJ,QAAMC,IAAI,GAAC,CAAC,KAAD,EAAO,SAAP,EAAiB,KAAjB,CAAX;AACA,QAAMC,OAAO,GAACT,MAAM,EAApB;AACA,QAAMU,MAAM,GAACV,MAAM,CAAC,IAAD,CAAnB;AACA,QAAMW,OAAO,GAACX,MAAM,CAAC,IAAIY,GAAJ,EAAD,CAApB,CAdsB,CAetB;AACA;AACA;;AACA,QAAK,CAACC,UAAD,EAAYC,aAAZ,IAA2Bf,QAAQ,CAAC,EAAD,CAAxC,CAlBsB,CAsBtB;;AACA,QAAMgB,aAAa,GAAEC,CAAD,IAAK;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,aAAd;AACF,GAFD,CAvBsB,CA0BtB;;;AACA,QAAMC,WAAW,GAAEJ,CAAD,IAAK;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACK,MAAF,CAASC,QAArB;AACAN,IAAAA,CAAC,CAACK,MAAF,CAASC,QAAT,GAAkB,IAAlB;AACAN,IAAAA,CAAC,CAACK,MAAF,CAASE,KAAT,CAAeC,OAAf,GAAuB,GAAvB;AACC,GAJD,CA3BsB,CAgCtB;;;AACA,QAAMC,aAAa,GAAET,CAAD,IAAK;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,aAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACK,MAAF,CAASK,IAArB;;AACA,QAAGV,CAAC,CAACK,MAAF,CAASK,IAAT,KAAgB,QAAnB,EAA4B;AACxBhB,MAAAA,MAAM,CAACiB,OAAP,GAAiBX,CAAC,CAACG,aAAnB,CADwB,CAE5B;;AACE,UAAIS,CAAC,GAAGlB,MAAM,CAACiB,OAAP,CAAeE,QAAf,CAAwBC,MAAhC;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACiB,OAAP,CAAeE,QAAf,CAAwB,CAAxB,EAA2BA,QAAvC;AACI,UAAIE,UAAU,GAAGrB,MAAM,CAACiB,OAAP,CAAeE,QAAf,CAAwBD,CAAC,GAAG,CAA5B,CAAjB;AACJG,MAAAA,UAAU,CAACT,QAAX,GAAoB,KAApB;AACAS,MAAAA,UAAU,CAACR,KAAX,CAAiBC,OAAjB,GAAyB,CAAzB;AACE,UAAIQ,WAAW,GAAGtB,MAAM,CAACiB,OAAP,CAAeE,QAAf,CAAwB,CAAxB,EAA2BI,KAA7C;AACD,UAAIC,OAAO,GAAGxB,MAAM,CAACiB,OAAP,CAAeE,QAAf,CAAwB,CAAxB,EAA2BA,QAAzC;AACCM,MAAAA,KAAK,CAACC,IAAN,CAAWF,OAAX,EAAoBG,OAApB,CAA6BC,MAAD,IAAU;AAClC,YAAGA,MAAM,CAACL,KAAP,KAAeD,WAAlB,EAA8B;AAC1BM,UAAAA,MAAM,CAAChB,QAAP,GAAgB,IAAhB;AACAgB,UAAAA,MAAM,CAACd,OAAP,GAAe,GAAf;AACH;AACJ,OALD,EAVwB,CAgBvB;;AAEKb,MAAAA,OAAO,CAACgB,OAAR,CAAgBY,GAAhB,CAAoBP,WAApB,EAAgCtB,MAAM,CAACiB,OAAvC;AACDV,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACgB,OAApB;AAER;AACF,GAzBD,CAjCsB,CA2DtB;;;AACA,QAAMa,WAAW,GAAExB,CAAD,IAAK;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACK,MAAd;AACH,GAFD;;AAII,sBACI;AAAK,IAAA,SAAS,EAAG,kBAAjB;AAAoC,IAAA,EAAE,EAAC,YAAvC;AAAA,2BAEI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAA6B,MAAA,GAAG,EAAEZ,OAAlC;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACQ;AAAA,oBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,cADA,eAcI;AAAK,QAAA,SAAS,EAAC,KAAf;AAA6C,QAAA,OAAO,EAAGW,CAAD,IAAOS,aAAa,CAACT,CAAD,CAA1E;AAAA,mBACKV,KAAK,CAACmC,GAAN,CAAWC,IAAD,iBAAW,QAAC,QAAD;AAAoC,UAAA,IAAI,EAAEA,IAAI,CAACrC,IAA/C;AAAqD,UAAA,MAAM,EAAEqC,IAAI,CAACnC,MAAlE;AAA0E,UAAA,aAAa,EAAGS,CAAD,IAAO,IAAhG;AAAsG,UAAA,SAAS,EAAC;AAAhH,WAAeV,KAAK,CAACqC,OAAN,CAAcD,IAAd,CAAf;AAAA;AAAA;AAAA;AAAA,gBAArB,CADL,eAEI,QAAC,SAAD;AAAW,UAAA,IAAI,EAAC,QAAhB;AAAyB,UAAA,aAAa,EAAG1B,CAAD,IAAO,IAA/C;AAAqD,UAAA,KAAK,EAAE;AAAE4B,YAAAA,eAAe,EAAE;AAAnB,WAA5D;AAA8F,UAAA,SAAS,EAAC;AAAxG;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,MAAb;AAAoB,UAAA,YAAY,EAAExB,WAAlC;AAA+C,UAAA,QAAQ,EAAE,KAAzD;AAAgE,UAAA,OAAO,EAAC,SAAxE;AAAkF,UAAA,KAAK,EAAC,OAAxF;AAAgG,UAAA,SAAS,EAAC;AAA1G;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAA0BZ,IAAI,CAACmC,OAAL,CAAaE,GAAb,CAA1B;AAAA;AAAA;AAAA;AAAA,cAdJ,eAoBI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,YAAY,EAAE9B,aAArC;AAAoD,UAAA,OAAO,EAAC,WAA5D;AAAwE,UAAA,KAAK,EAAC,OAA9E;AACA,UAAA,SAAS,EAAC;AADV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GAjGQX,I;;KAAAA,I;AAmGT,eAAeA,IAAf","sourcesContent":["import React,{useState,useRef} from 'react'\r\nimport Button from '../button/Button'\r\nimport Dropdown from '../dropdown/Dropdown'\r\nimport TextInput from '../textInput/TextInput'\r\nimport './Form.css'\r\n\r\nfunction Form({name}) {\r\n   \r\n    const tests=[{\r\n        name:'Tested Biomarker',\r\n        values: ['ECG', 'Glucose', 'CBC']\r\n    },{\r\n        name:'unit',\r\n        values:['mgdl','mg','cm']\r\n    }\r\n\r\n]\r\nconst keys=['ECG','Glucose','CBC']\r\nconst formRef=useRef();\r\nconst refRow=useRef(null);\r\nconst refRows=useRef(new Map());\r\n// keys.forEach((key)=>{\r\n//     refRows.current.set(key,useRef(null));\r\n// })\r\nconst[labResults,setLabResults]=useState([]);\r\n\r\n\r\n\r\n//////////////////////////\r\nconst addRowHandler=(e)=>{\r\n   console.log(e.currentTarget);  \r\n}\r\n/////////////////////////////////\r\nconst saveHandler=(e)=>{ \r\nconsole.log(e.target.disabled);\r\ne.target.disabled=true;\r\ne.target.style.opacity=0.5;\r\n}\r\n///////////////////////////////\r\nconst eventBubbling=(e)=>{\r\n  console.log(e.currentTarget);\r\n  console.log(e.target.type)\r\n  if(e.target.type==='submit'){\r\n      refRow.current = e.currentTarget;\r\n  //console.log(refRow.current);\r\n    let l = refRow.current.children.length;\r\n    console.log(refRow.current.children[2].children);\r\n        let editButton = refRow.current.children[l - 1];\r\n    editButton.disabled=false;\r\n    editButton.style.opacity=1;\r\n      let selectedVal = refRow.current.children[2].value;\r\n     let options = refRow.current.children[2].children;\r\n      Array.from(options).forEach((option)=>{\r\n          if(option.value===selectedVal){\r\n              option.disabled=true;\r\n              option.opacity=0.5;\r\n          }\r\n      })\r\n       // console.log(tests.current)\r\n      \r\n            refRows.current.set(selectedVal,refRow.current);\r\n           console.log(refRows.current);\r\n           \r\n  }   \r\n}\r\n//////////////////////\r\nconst editHandler=(e)=>{\r\n    console.log(e.target);\r\n}\r\n\r\n    return (\r\n        <div className={`container-fluid `} id=\"lab-report\" >  \r\n           \r\n            <div className={`grid form`} ref={formRef}>\r\n            <div className='row'>\r\n                    <h3 >{name}</h3>\r\n            </div>\r\n               \r\n            {/* {keys.map((key)=>\r\n               ( <div className='row' key={keys.indexOf(key)} onClick={(e)=>eventBubbling(e)} >\r\n                { tests.map((test) => (<Dropdown key={tests.indexOf(test)} name={test.name} values={test. values} changeHandler={(e) => null} className='col' />))}\r\n                    <TextInput name=\"result\" changeHandler={(e)=>null} style={{ backgroundColor: 'aliceBlue' }} className='col' />\r\n                    <Button name='Save' clickHandler={saveHandler} disabled={false} variant='primary' color='white' className='col' ></Button>\r\n                <Button name='Edit' clickHandler={editHandler} disabled={true} variant='primary' color='white' className='col' ></Button>\r\n                </div>\r\n               )\r\n            )} */}\r\n                <div className='row' key={keys.indexOf(key)} onClick={(e) => eventBubbling(e)} >\r\n                    {tests.map((test) => (<Dropdown key={tests.indexOf(test)} name={test.name} values={test.values} changeHandler={(e) => null} className='col' />))}\r\n                    <TextInput name=\"result\" changeHandler={(e) => null} style={{ backgroundColor: 'aliceBlue' }} className='col' />\r\n                    <Button name='Save' clickHandler={saveHandler} disabled={false} variant='primary' color='white' className='col' ></Button>\r\n                    </div>\r\n               \r\n                <div className='row flex-end'>\r\n                    <Button name='Add Row' clickHandler={addRowHandler} variant='secondary' color='white'\r\n                    className='col'></Button>\r\n                  \r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}